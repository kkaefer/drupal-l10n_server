<?php
// $Id: l10n_community.install,v 1.1.2.2 2007-07-19 18:43:58 goba Exp $
/**
 * @file
 *   Localization community installation, update and uninstallation.
*/

/**
 * Implementation of hook_install().
 */
function l10n_community_install() {
  $table_config = "";
  $serial = "SERIAL";
  switch ($GLOBALS["db_type"]) {
    case "mysql":
    case "mysqli":
      $table_config = "TYPE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */";
      $serial = "INTEGER       NOT NULL AUTO_INCREMENT";
      // Intentionally no break here.
    case "pgsql":
      // Adds "managed language" information to localization groups.
      db_query("CREATE TABLE {l10n_community_group} (
          nid           INTEGER       NOT NULL,
          language      VARCHAR(12)   NOT NULL
        ) $table_config;");
      db_query("CREATE INDEX {l10n_community_group}_nid ON {l10n_community_group} (nid);");
      break;
  }
  
  // Set variables.
  variable_set('site_frontpage', 'l10nhome');
  variable_set('site_name', 'Drupal localization server');
  
  // Add languages and plurals we know have Drupal translations
  // to some degree already. See l10n_community_plurals().
  $languages = l10n_community_plurals();
  include_once 'includes/locale.inc';
  foreach ($languages as $langcode => $data) {
    list($plurals, $formula) = _locale_import_parse_plural_forms($data[1], 'automatic install of '. $data[0]);
    if (!$locale = db_result(db_query("SELECT locale FROM {locales_meta} WHERE locale = '%s'", $langcode))) {
      db_query("INSERT INTO {locales_meta} (locale, name, enabled, plurals, formula) VALUES ('%s', '%s', %d, %d, '%s')", $langcode, $data[0], 1, $plurals, $formula);
    }
    else {
      db_query("UPDATE {locales_meta} SET plurals = %d, formula = '%s' WHERE locale = '%s'", $plurals, $formula, $langcode);
    }
    
    // Possibly create the OG group nodes here.
  }
}

function l10n_community_uninstall() {
  db_query("DROP TABLE {l10n_community_group}");
}

/**
 * A list of "Drupal languages" compiled from the list of languages
 * in drupal.org CVS on July 18th, 2007.
 *
 * Plural information based on:
 *   - http://www.wordforge.org/static/l10n-pluralforms.html
 *   - our own CVS repository information from core translations
 */
function l10n_community_plurals() {
  $default = 'nplurals=2; plural=(n!=1);';
  $one = 'nplurals=1; plural=0;';
  return array(
    'af' => array('Afrikaans', $default),
    // Wordforge says nplurals=4!?
    'ar' => array('Arabic', 'nplurals=6; plural=n==1 ? 0 : n==0 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 && n%100<=99 ? 4 : 5;'),
    'bg' => array('Bulgarian', $default),
    'bn' => array('Bengali', $default),
    'bs' => array('Bosnian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    // Wordforge has different rules!?
    'ca' => array('Catalan', 'nplurals=2; plural=(n > 1);'),
    // Wordforge has different rules!?
    'cs' => array('Czech', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    'da' => array('Danish', $default),
    'de' => array('German', $default),
    // Wordforge has nplurals=1, but this might fit us better.
    'dz' => array('Dzongkha', $default),
    'el' => array('Greek', $default),
    'eo' => array('Esperanto', $default),
    'es' => array('Spanish', $default),
    'et' => array('Estonian', $default),
    'eu' => array('Basque', $default),
    // Wordforge has nplurals=1, but this might fit us better.
    'fa' => array('Persian', $default),
    'fi' => array('Finnish', $default),
    'fo' => array('Faroese', $default),
    'fr' => array('French', 'nplurals=2; plural=(n > 1);'),
    'gl' => array('Galician', $default),
    'gu' => array('Gujarati', $default),
    'he' => array('Hebrew', $default),
    'hi' => array('Hindi', $default),
    'hr' => array('Croatian', 'nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;'),
    // Wordforge has nplurals=1, but this might fit us better.
    'hu' => array('Hungarian', $default),
    // Wordforge has nplurals=1, but this might fit us better.
    'id' => array('Indonesian', $default),
    'is' => array('Icelandic', $default),
    'it' => array('Italian', $default),
    // Wordforge has nplurals=1, but this might fit us better.
    'ja' => array('Japaneese', $default),
    'km' => array('Khmer', $default),
    'kn' => array('Kannada', $default),
    'ko' => array('Korean', $default),
    'lt' => array('Lithuanian', 'nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2;'),
    'lv' => array('Latvian', 'nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2;'),
    'mk' => array('Macedonian', $default),
    'mr' => array('Marathi', $default),
    'ms' => array('Malay', $default),
    'my' => array('Burmese', $default),
    'nb' => array('Norvegian BokmÃ¥l', $default),
    'nn' => array('Norwegian Nynorsk', $default),
    // This is already superceeded in CVS by the above two?!?
    //'no' => array('Norwegian', $default),
    'np' => array('Nepali', $default),
    'pl' => array('Polish', 'nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    // Wordforge has different rules!?
    'pt-br' => array('Brazilian Portuguese', $default),
    'pt-pt' => array('Portuguese', $default),
    // Wordforge has completely different rules with nplurals=3!?
    'ro' => array('Romanian', $default),
    'ru' => array('Russian', 'nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);'),
    // This should not be there in CVS, needs cleanup!
    // 'ru-ru' => array(),
    'sk' => array('Slovak', 'nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;'),
    'sl' => array('Slovenian', 'nplurals=4; plural=(n%100==1 ? 0 : n%100==2 ? 1 : n%100==3 || n%100==4 ? 2 : 3);'),
    'sq' => array('Albanian', $default),
    // Wordforge has nplurals=4 here, and could be right, based on the .po file data?!?
    'sr' => array('Serbian', $default),
    'sv' => array('Swedish', $default),
    'th' => array('Thai', $default),
    'tr' => array('Turkish', $one),
    'uk' => array('Ukrainian', 'nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;'),
    // Why does this need the -uz suffix???
    'uz-uz' => array('Uzbek', $default),
    'vi' => array('Vietnamese', $one),
    'zh-hans' => array('Chinese (simplified)', $one),
    'zh-hant' => array('Chinese (traditional)', $one),
  );
}